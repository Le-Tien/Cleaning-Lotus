// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$calc-name: 'calc';
$calc-x: 0px;
$calc-y: 0px;
$calc-offset-x: 0px;
$calc-offset-y: 0px;
$calc-width: 150px;
$calc-height: 150px;
$calc-total-width: 567px;
$calc-total-height: 400px;
$calc-image: '../images/sprite.png';
$calc: (0px, 0px, 0px, 0px, 150px, 150px, 567px, 400px, '../images/sprite.png', 'calc', );
$chemical-name: 'chemical';
$chemical-x: 150px;
$chemical-y: 0px;
$chemical-offset-x: -150px;
$chemical-offset-y: 0px;
$chemical-width: 150px;
$chemical-height: 150px;
$chemical-total-width: 567px;
$chemical-total-height: 400px;
$chemical-image: '../images/sprite.png';
$chemical: (150px, 0px, -150px, 0px, 150px, 150px, 567px, 400px, '../images/sprite.png', 'chemical', );
$logo-name: 'logo';
$logo-x: 0px;
$logo-y: 300px;
$logo-offset-x: 0px;
$logo-offset-y: -300px;
$logo-width: 179px;
$logo-height: 100px;
$logo-total-width: 567px;
$logo-total-height: 400px;
$logo-image: '../images/sprite.png';
$logo: (0px, 300px, 0px, -300px, 179px, 100px, 567px, 400px, '../images/sprite.png', 'logo', );
$personal-name: 'personal';
$personal-x: 450px;
$personal-y: 0px;
$personal-offset-x: -450px;
$personal-offset-y: 0px;
$personal-width: 117px;
$personal-height: 150px;
$personal-total-width: 567px;
$personal-total-height: 400px;
$personal-image: '../images/sprite.png';
$personal: (450px, 0px, -450px, 0px, 117px, 150px, 567px, 400px, '../images/sprite.png', 'personal', );
$sale-name: 'sale';
$sale-x: 0px;
$sale-y: 150px;
$sale-offset-x: 0px;
$sale-offset-y: -150px;
$sale-width: 150px;
$sale-height: 150px;
$sale-total-width: 567px;
$sale-total-height: 400px;
$sale-image: '../images/sprite.png';
$sale: (0px, 150px, 0px, -150px, 150px, 150px, 567px, 400px, '../images/sprite.png', 'sale', );
$spec-name: 'spec';
$spec-x: 150px;
$spec-y: 150px;
$spec-offset-x: -150px;
$spec-offset-y: -150px;
$spec-width: 150px;
$spec-height: 150px;
$spec-total-width: 567px;
$spec-total-height: 400px;
$spec-image: '../images/sprite.png';
$spec: (150px, 150px, -150px, -150px, 150px, 150px, 567px, 400px, '../images/sprite.png', 'spec', );
$specialist-name: 'specialist';
$specialist-x: 300px;
$specialist-y: 0px;
$specialist-offset-x: -300px;
$specialist-offset-y: 0px;
$specialist-width: 150px;
$specialist-height: 150px;
$specialist-total-width: 567px;
$specialist-total-height: 400px;
$specialist-image: '../images/sprite.png';
$specialist: (300px, 0px, -300px, 0px, 150px, 150px, 567px, 400px, '../images/sprite.png', 'specialist', );
$time-name: 'time';
$time-x: 300px;
$time-y: 150px;
$time-offset-x: -300px;
$time-offset-y: -150px;
$time-width: 150px;
$time-height: 150px;
$time-total-width: 567px;
$time-total-height: 400px;
$time-image: '../images/sprite.png';
$time: (300px, 150px, -300px, -150px, 150px, 150px, 567px, 400px, '../images/sprite.png', 'time', );
$up-name: 'up';
$up-x: 450px;
$up-y: 150px;
$up-offset-x: -450px;
$up-offset-y: -150px;
$up-width: 50px;
$up-height: 50px;
$up-total-width: 567px;
$up-total-height: 400px;
$up-image: '../images/sprite.png';
$up: (450px, 150px, -450px, -150px, 50px, 50px, 567px, 400px, '../images/sprite.png', 'up', );
$spritesheet-width: 567px;
$spritesheet-height: 400px;
$spritesheet-image: '../images/sprite.png';
$spritesheet-sprites: ($calc, $chemical, $logo, $personal, $sale, $spec, $specialist, $time, $up, );
$spritesheet: (567px, 400px, '../images/sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
